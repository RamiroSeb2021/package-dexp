usethis::proj_activate("G:/Mi unidad/RSTUDIO_/Diseño_Experimentos/Proyecto_APP/Proyecto_DEXP/dexp")
devtools::document()
devtools::document()
devtools::install()
library(dexp)
# Probar con ayuda
?calcular_r_MT
# Ejecutar ejemplo real
calcular_r_MT(
T_ = 6,
D = 20,
ro = 6,
S1 = sqrt(141.6),
df1 = 40
)
# Verificar que todo este limpio
devtools::check()
install.packages("pkgbuild")  # si no lo tienes aún
pkgbuild::find_rtools()
pkgbuild::find_rtools()
pkgbuild::rtools_path()
# Verificar que todo este limpio
devtools::check()
devtools::document()
# Verificar que todo este limpio
devtools::check()
devtools::install()
library(dexp)
calcular_r_MT(
T_ = 6,
D = 20,
ro = 6,
S1 = sqrt(141.6),
df1 = 40
)
usethis::use_readme_rmd()
devtools::build_readme()
usethis::use_pkgdown()
pkgdown::build_site()
devtools::install_github()
pkgdown::build_site()
library(dexp)
?calcular_r_MT
calcular_r_MT(
T_ = 8,
D = 500,
ro = 4,
S1 = sqrt(90000),
df1 = 200,
alfa = 0.1,
Beta = 0.25
)
remove.packages("nombre_del_paquete")
remove.packages("dexp")
library(dexp)
devtools::document()
devtools::install()
library(help = dexp)
?encontrar_r_minimo
resultado <- encontrar_r_minimo(t = 5, rho = 0.4, potencia_objetivo = 0.8)
resultado$r_optimo
resultado$potencia
resultado$grafico
resultado$tabla
# Verificar que todo este limpio
devtools::check()
usethis::use_package("ggplot2")
# Verificar que todo este limpio
devtools::check()
# Verificar que todo este limpio
devtools::check()
devtools::document()
devtools::install()
# Verificar que todo este limpio
devtools::check()
# Verificar que todo este limpio
devtools::check()
# Verificar que todo este limpio
devtools::check()
devtools::document()
# Verificar que todo este limpio
devtools::check()
devtools::document()
devtools::install()
library(help = dexp)
devtools::document()
devtools::install()
devtools::document()
devtools::install()
remove.packages("dexp")
library(help = dexp)
devtools::document()
devtools::install()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::document()
library(help = dexp)
devtools::document()
devtools::install()
library(help = dexp)
?calcular_A
?encontrar_r_minimo
devtools::document()
remove.packages("dexp")
devtools::clean_dll()
devtools::document()   # genera documentación
devtools::document()   # genera documentación
devtools::build()      # empaqueta
devtools::install()    # instala
library(help = dexp)
?proporcionalidad_sin_costo_ni_tamaño_de_muestra
?proporcionalidad_con_costo_ni_tamaño_de_muestra
?numero_de_tratamientos_y_replicas_con_efectos_aleatorios
getwd()
getwd()
getwd()
remove.packages("dexp")
devtools::clean_dll()
devtools::document()   # genera documentación
devtools::build()      # empaqueta
devtools::install()    # instala
devtools::document()   # genera documentación
devtools::build()      # empaqueta
devtools::install()    # instala
library(help = dexp)
?k_tabla_mc
?calcular_A
?simular_potencia_FNC
?encontrar_r_minimo_Potencia
?k_tabla_mc
?encontrar_r_minimo_Potencia
remove.packages("dexp")
devtools::clean_dll()
devtools::document()   # genera documentación
devtools::build()      # empaqueta
devtools::install()    # instala
?k_tabla_mc
devtools::document()   # genera documentación
remove.packages("dexp")
devtools::clean_dll()
devtools::document()   # genera documentación
devtools::build()      # empaqueta
devtools::install()    # instala
k_tabla_mc
?k_tabla_mc
?simular_potencia_FNC
?proporcionalidad_sin_costo_ni_tamaño_de_muestra
remove.packages("dexp")
devtools::clean_dll()
devtools::document()   # genera documentación
devtools::build()      # empaqueta
devtools::install()    # instala
# Probar con ayuda
?calcular_r_MT
# Verificar que todo este limpio
devtools::check()
